name: Compiling C++ Code
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  config:
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Nothing to configure
        shell: cmd
        run: |
          echo "No configuration needed for this job."

  windows:
    runs-on: windows-latest
    needs: config

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Build Environment
        shell: cmd
        run: |
          mkdir build
          copy src\*.* build\
          copy CMakeLists.txt build\

      - name: Compile C++ Code with CMAKE
        shell: cmd
        run: |
          call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
          cd build
          cmake -G "Visual Studio 17 2022" -A x64 ..
          cmake --build . --config Release

      - name: Copy Build Artifacts
        run: |
          cd ..
          mkdir artifact
          copy Moo\build\bin\Release\Moo.dll artifact\
          copy Moo\build\lib\Release\Moo.lib artifact\
          copy Moo\build\lib\Release\Moo.exp artifact\
          dir artifact
          pwd

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Moo-DLL-Artifacts
          path: D:\a\Moo\artifact

  unixbased:
    runs-on: ${{ matrix.os }}
    needs: config

    strategy:
      matrix:
        os: [ ubuntu-latest, debian-latest, fedora-latest, archlinux-latest,
              centos-latest, opensuse-latest ]
        compiler: [ gcc ]
    steps:
      - uses: actions/checkout@v4
      - name: Build with ${{ matrix.compiler }} on ${{ matrix.os }}
        run: echo "Building with ${{ matrix.compiler }} on ${{ matrix.os }}"

      - name: Update and Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential cmake
          sudo apt-get install -y ${{ matrix.compiler }}
          sudo apt-get install -y make
          #sudo apt-get upgrade -y

      - name: Setup Build Environment
        run: |
          mkdir build
          cp -r src build/

      - name: GCC Build
        if: matrix.compiler == 'gcc'
        run: |
          cd build/src
          gcc -shared -o moo.so -fPIC moo.hpp

      - name: Copy Build Artifacts
        run: |
          mkdir artifact
          cp build/moo.so artifact/
          ls artifact

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Moo-SO-Artifacts
          path: artifact/moo.so

  macos:
    runs-on: macos-latest
    needs: config

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Not implemented
        run: |
          echo "MacOS build is not implemented yet"
          assert false, "MacOS build is not implemented yet"