name: Compiling C++ Code
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  config:
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Nothing to configure
        shell: cmd
        run: |
          echo "No configuration needed for this job."

  windows:
    runs-on: windows-latest
    needs: config

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Build Environment
        shell: cmd
        run: |
          mkdir build
          copy src\*.* build\
          copy CMakeLists.txt build\

      - name: Compile C++ Code with CMAKE
        shell: cmd
        run: |
          call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
          cd build
          cmake -G "Visual Studio 17 2022" -A x64 ..
          cmake --build . --config Release

      - name: Copy Build Artifacts
        run: |
          cd ..
          mkdir artifact
          copy Moo\build\bin\Release\Moo.dll artifact\
          copy Moo\build\lib\Release\Moo.lib artifact\
          copy Moo\build\lib\Release\Moo.exp artifact\
          dir artifact
          pwd

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Moo-DLL-Artifacts
          path: D:\a\Moo\artifact

  docker:
    runs-on: ubuntu-latest
    needs: config

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build Docker Image
        run: |
          docker build -t moo-docker-image .

      - name: Run Docker Container
        run: |
          docker run --name moo-container moo-docker-image

      - name: Cleanup Docker
        run: |
          docker rm -f moo-container || true
          docker rmi moo-docker-image || true

  unixbased:
    runs-on: ${{ matrix.os }}
    needs: config

    strategy:
      matrix:
        os: [ ubuntu-latest, debian-latest, fedora-latest, archlinux-latest,
              centos-latest, opensuse-latest ]
        compiler: [ gcc, clang, g++, clang++ ]
    steps:
      - uses: actions/checkout@v4
      - name: Build with ${{ matrix.compiler }} on ${{ matrix.os }}
        run: echo "Building with ${{ matrix.compiler }} on ${{ matrix.os }}"

  macos:
    runs-on: macos-latest
    needs: config

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Build Environment
        shell: bash
        run: |
          mkdir build
          cp src/* build/
          cp CMakeLists.txt build/

      - name: Compile C++ Code with CMAKE
        shell: bash
        run: |
          cmake -S build -B build -G "Xcode"
          cmake --build build --config Release

      - name: Copy Build Artifacts
        run: |
          mkdir artifact
          cp build/bin/Release/Moo.dylib artifact/
          cp build/lib/Release/Moo.a artifact/
          ls artifact
          pwd

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Moo-Dylib-Artifacts
          path: Moo/artifact