name: Testing API
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build_lua:
    name: Build and Test Lua API
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Clone and Extract Lua Source
        run: |
          curl -L https://www.lua.org/ftp/lua-5.4.8.tar.gz -o lua.tar.gz
          mkdir lua-src
          tar -xzf lua.tar.gz -C lua-src --strip-components=1

      - name: Compile Lua with MSVC
        shell: cmd
        run: |
          call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
          cd lua-src
          cl /c /O2 /DLUA_BUILD_AS_DLL ^
            src\lapi.c src\lcode.c src\lctype.c src\ldebug.c src\ldo.c src\ldump.c src\lfunc.c ^
            src\lgc.c src\llex.c src\lmem.c src\lobject.c src\lopcodes.c src\lparser.c ^
            src\lstate.c src\lstring.c src\ltable.c src\ltm.c src\lundump.c src\lvm.c ^
            src\lzio.c src\lauxlib.c src\lbaselib.c src\lcorolib.c src\ldblib.c ^
            src\liolib.c src\lmathlib.c src\loslib.c src\lstrlib.c src\ltablib.c ^
            src\lutf8lib.c src\loadlib.c src\linit.c
          
          lib /OUT:lua.lib *.obj
          
          link /DLL /OUT:lua.dll *.obj


      - name: Copy Lua output
        run: |
          mkdir lua-bin
          copy lua-src\*.dll lua-bin\
          copy lua-src\*.lib lua-bin\
          dir lua-bin

      - name: Setup Build Environment
        shell: cmd
        run: |
          mkdir build
          copy lua-bin\lua.lib build\
          copy lua-src\src\*.* build\
          copy lua-bin\lua.dll build\
          copy api\run.cpp lua-src\


      - name: Compile C++ Test with Lua Embedded
        shell: cmd
        run: |
          call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvars64.bat" ^
          && cl lua-src\run.cpp /I build /link build\lua.lib /OUT:LuaTest.exe


      - name: Copy Lua Files
        run: |
          mkdir testdir
          copy lua-src\testdir\*.lua testdir\
          copy lua-src\testdir\Moo.dll testdir\

      - name: Run Executable
        run: |
          LuaTest.exe

  test_unixbased_api_python:
    runs-on: ubuntu-latest
    strategy:

      fail-fast: false
      matrix:
        vector:
          - jobname: test-debian
            image: debian:latest
            os: ubuntu-latest
          - jobname: test-ubuntu
            image: ubuntu:latest
            os: ubuntu-latest
          - jobname: test-alpine
            image: alpine:latest
            os: ubuntu-latest
          - jobname: test-fedora
            image: fedora:latest
            os: ubuntu-latest
          - jobname: linux-sha256
            image: ubuntu:rolling
          - jobname: linux-reftable
            image: ubuntu:rolling
            cc_package: gcc-8
          - jobname: linux-breaking-changes
            image: ubuntu:rolling
          - jobname: linux-leaks
            image: ubuntu:rolling
          - jobname: linux-reftable-leaks
            image: ubuntu:rolling
          - jobname: linux-asan-ubsan
            image: ubuntu:rolling
          - jobname: linux-meson
            image: ubuntu:rolling
          - jobname: linux-musl-meson
            image: alpine:latest
          # Supported until 2025-04-02.
          - jobname: pedantic
            image: fedora:latest
          # A RHEL 8 compatible distro.  Supported until 2029-05-31.
          - jobname: almalinux-8
            image: almalinux:8
          # Supported until 2026-08-31.
          - jobname: debian-11
            image: debian:11
    name: ${{ matrix.vector.jobname }} (${{ matrix.vector.os }})
    env:
      jobname: ${{ matrix.vector.jobname }}
      CI_JOB_OS: ${{ matrix.vector.os }}
    steps:
      - uses: actions/checkout@v4

      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Download SO Artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: Moo-SO-Artifacts-${{ matrix.vector.jobname }}

      - name: Create Runtime Environment
        run: |
          mkdir runtime-${{ matrix.vector.jobname }}
          cp Moo-SO-Artifacts-${{ matrix.vector.jobname }}/*.so runtime-${{ matrix.vector.jobname }}/
          cp api/python/*.* runtime-${{ matrix.vector.jobname }}/

      - name: Run Unix API Tests
        run: |
          cd runtime-${{ matrix.vector.jobname }}
          python3 test.py
          echo "Unix API tests completed successfully."

  test_windows:
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run Windows Tests
        shell: cmd
        run: |
          echo "Running tests for Moo on Windows"
          assert true, "This is a placeholder for actual tests"

  test_windows_api:
    runs-on: windows-latest

    strategy:
      matrix:
        vector:
          - jobname: test-windows-api-python
            os: windows-latest
            api: python
            extension: .py
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download DLL
        uses: actions/download-artifact@v4
        with:
          name: Moo-DLL-Artifacts

      - name: Create Runtime Environment
        run: |
          mkdir runtime-${{ matrix.vector.api }}
          xcopy api\${{ matrix.vector.api }} runtime-${{ matrix.vector.api }} /E /I /Y
          copy Moo.dll runtime-${{ matrix.vector.api }}\      

      - name: Run Windows API Tests
        run: |
          ${{ matrix.vector.api }} runtime-${{ matrix.vector.api }}\test${{ matrix.vector.extension }}

  test_macos_api:
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run MacOS API Tests
        run: |
          echo "Running API tests for Moo on MacOS"
          assert true, "This is a placeholder for actual API tests"

  test_macos:
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run MacOS Tests
        run: |
          echo "Running tests for Moo on MacOS"
          assert true, "This is a placeholder for actual tests"